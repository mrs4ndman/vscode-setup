{
  // Plugins
  "quokka.colorizeOutput": true,

  "tabnine.experimentalAutoImports": true,

  "projectManager.git.baseFolders": ["$home/hs", "$home/Gitchub"],

  "gitblame.delayBlame": 2000,
  "gitblame.inlineMessageFormat": "--> ${author.name} - (${time.ago})",
  "gitblame.inlineMessageMargin": 1,
  "gitblame.inlineMessageNoCommit": "Not yet?",
  "gitblame.statusBarMessageFormat": "--> ${author.name} - (${time.ago})",

  "codeium.enableSearch": true,

  "redhat.telemetry.enabled": false,

  "git.autofetch": true,

  // EDITOR
  "editor.acceptSuggestionOnEnter": "off",
  "editor.acceptSuggestionOnCommitCharacter": true,
  "editor.codeActionsOnSave": {
    "source.addMissingImports": true,
    "source.organizeImports": true
  },
  "editor.comments.ignoreEmptyLines": true,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorStyle": "block",
  "editor.cursorBlinking": "solid",
  "editor.cursorSurroundingLines": 8,
  "editor.find.cursorMoveOnType": false,
  "editor.fontFamily": "JetBrainsMono Nerd Font",
  "editor.fontLigatures": true,
  "editor.fontWeight": "300",
  // TODO: Don't know if I need this
  // "editor.formatOnPaste": true,
  // "editor.formatOnSave": true,
  "editor.inlineSuggest.enabled": true,
  "editor.inlayHints.enabled": "offUnlessPressed",
  "editor.inlayHints.padding": true,
  "editor.lineNumbers": "relative",
  "editor.linkedEditing": true,
  "editor.minimap.enabled": false,
  "editor.mouseWheelZoom": true,
  "editor.suggestFontSize": 14,
  "editor.suggest.insertMode": "replace",
  "editor.stickyScroll.enabled": true,
  "editor.wordWrap": "bounded",
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.enableUndo": true,
  "explorer.sortOrder": "type",
  "extensions.autoCheckUpdates": true,
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "extensions.ignoreRecommendations": true,

  // FILES
  "files.exclude": {
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/node_modules": true
  },
  "files.trimFinalNewlines": true,

  // TERMINAL
  "terminal.integrated.env.linux": {},
  "terminal.integrated.env.windows": {},
  "terminal.integrated.persistentSessionScrollback": 10000,
  "terminal.integrated.scrollback": 10000,

  // VIM settings
  "vim.enableNeovim": true,
  "vim.autoindent": true,
  "vim.easymotion": true,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 50,
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.useSystemClipboard": true,
  "vim.visualstar": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    // UI Toggles
    {
      "before": ["<leader>", "s", "a"],
      "after": ["g", "g", "v", "G"]
    },
    {
      "before": ["<leader>", "E"],
      "commands": ["workbench.files.action.focusFilesExplorer"]
    },
    {
      "before": ["<leader>", "l"], // Show active editor in explorer
      "commands": ["revealInExplorer"]
    },
    {
      "before": ["<leader>", "m", "d"], // Markdown Preview
      "commands": ["markdown-preview-enhanced.openPreviewToTheSide"]
    },
    {
      "before": ["leader", "p", "c"], // Command Palette
      "commands": ["workbench.action.showCommands"]
    },
    // {
    //   "before": ["leader", "p", "m"], // Command Palette
    //   "commands": ["projectManager"]
    // },
    {
      "before": ["<leader>", "s"], // Sidebar toggle
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "t", "r"], // Ctrl + P
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<leader>", "z"], // Zen mode
      "commands": ["workbench.action.toggleZenMode"]
    },
    // Neovim leap mapping
    {
      "before": ["+"],
      "after": ["S"]
    },
    {
      "before": ["s"],
      "after": ["<leader>", "<leader>", "2", "s"]
    },
    {
      "before": ["<CR>"],
      "after": ["o", "<Esc>"]
    },
    {
      "before": ["<C-u>"],
      "after": ["<C-u>", "z", "z"]
    },
    {
      "before": ["<C-d>"],
      "after": ["<C-d>", "z", "z"]
    },
    {},
    // Undo / redo mappings
    {
      "before": ["u"],
      "commands": ["undo"]
    },
    {
      "before": ["<C-r>"],
      "commands": ["redo"]
    },
    // File operations & shortcuts
    {
      "before": ["<leader>", "f", "r"], // Rename
      "commands": ["fileutils.renameFile"]
    },
    {
      "before": ["leader", "f", "f"],
      "commands": ["editor.action.format"]
    },
    {
      "before": ["<leader>", "o"],
      "commands": ["editor.action.insertLineAfter"]
    },
    {
      "before": ["<leader>", "O"],
      "commands": ["editor.action.insertLineBefore"]
    },
    {
      "before": ["<leader>", "i", "p"],
      "after": ["=", "a", "p"]
    },
    // STUFF THAT DOESN'T WORK RN
    // {
    //   "before": ["}"],
    //   "after": ["}zzzv"]
    // },

    // LSP STUFF
    {
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["<leader>", "v", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<leader>", "r", "f"],
      "commands": ["editor.action.rename"],
    },
    {
      "before": ["g", "h"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.mark.prev"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.mark.next"]
    },
    // Buffer management
    {
      "before": ["<Tab>"],
      "commands": [":bnext"]
    },
    {
      "before": ["<S-Tab>"],
      "commands": [":bprev"]
    },
    {
      "before": ["leader", "b", "c"],
      "commands": [":bdelete"]
    },
    {
      "before": ["leader", "b", "d"],
      "commands": [":bd!"]
    },
    {
      "before": ["<leader>", "w", "s"],
      "commands": [":split"]
    },
    {
      "before": ["<leader>", "w", "v"],
      "commands": [":vsplit"]
    },
    {
      "before": ["<leader>", "w", "w"],
      "commands": [":wa"]
    },
    {
      "before": ["<leader>", "<Esc>"],
      "commands": [":quitall"]
    },
    {
      "before": ["<leader>", "q"],
      "commands": [":close"]
    },
    {
      "before": ["/"],
      "commands": ["actions.find"]
    },
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // Good visual indenting
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    // Moving text inside visual mode and keeping indentation
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    // Block commenting
    {
      "before": ["g", "b"],
      "commands": ["editor.action.blockComment"]
    }
  ],
  "vim.insertModeKeyBindingsNonRecursive": [
    // Completion keybinds
    {
      "before": ["<C-n>"],
      "commands": ["selectNextSuggestion"]
    },
    {
      "before": ["<C-p>"],
      "commands": ["selectPrevSuggestion"]
    },
    {
      "before": ["<C-y>"],
      "commands": ["acceptSelectedSuggestion"]
    },
    {
      "before":["<Tab>"],
      "after":["<Nop>"]
    }
  ],

  // WORKBENCH
  "workbench.colorTheme": "Tokyo Night Gogh",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.settings.editor": "json",
  "workbench.startupEditor": "none",
  "workbench.statusBar.visible": true,
  "workbench.colorCustomizations": {
    "statusBar.background": "#0037AA"
  },

  // WINDOW
  "window.menuBarVisibility": "toggle",
  "window.titleBarStyle": "custom",
  "zenMode.hideLineNumbers": false,
  "zenMode.hideTabs": false,

  /// PER LANGUAGE STUFF

  // JSON
  "cSpell.enableFiletypes": ["!jsonc"],
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "sortJSON.orderOverride": ["name", "version", "description"],
  "sortJSON.orderUnderride": ["dependencies", "devDependencies"],

  // TYPESCRIPT Y JAVASCRIPT
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "typescript.updateImportsOnFileMove.enabled": "always",

  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  }
}
